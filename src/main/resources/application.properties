# Data source ds0, ds1
sharding.jdbc.datasource.names=ds0,ds1

# First database
sharding.jdbc.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds0.jdbc-url=mysql://localhost:3306/dba?characterEncoding=utf-8
sharding.jdbc.datasource.ds0.username=root
sharding.jdbc.datasource.ds0.password=P4$$w0rd0101

# Second database
sharding.jdbc.datasource.ds1.type=org.apache.commons.dbcp2.BasicDataSource
sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.driver
sharding.jdbc.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/ds1?characterEncoding=utf-8
sharding.jdbc.datasource.ds1.username=root
sharding.jdbc.datasource.ds1.password=P4$$w0rd0101

# Horizontally split database (table) configuration sharding + table sharding strategy row expression sharding strategy
# Sub-library strategy
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

# Sub-table strategy where user is a logical table sub-table mainly depends on the age row
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=ds$->{0..1}.user_$->{0..1}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=age
# Fragmentation algorithm expression
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{age% 2}
# Primary key UUID 18 digits, if it is distributed, a setting must be made to prevent duplicate primary keys
#sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id
# Print the executed database and statement
sharding.jdbc.config.props.sql.show=true
spring.main.allow-bean-definition-overriding=true